Docker command:

docker logs [conatiner-id] :
	show the messages from the main running process in the conatiner
	
docker exec -it [container-id] /bin/bash:
	get a interactive shell from the running container
	
docker cp:
	copy files between host and conatiner
	
docker inspect:

docker ports

running docker within weave network
1. launch weave if not on the node:
   weave launch --dns-domain="ienergy.devcommunity." 172.31.54.85 (the ip address is the master node, and we are using the domain as set)
2. setup the weave environment variable
   eval $(weave env)
3. start the container and point to the consul hostname defined within the weave network
   docker run -d --rm -p 8081:8080 -e CONSUL_HOST_NAME=consul.ienergy.devcommunity -e CONSUL_HOST_PORT=8500 kchen007/state

running docker web app behind nginx with load banlancer
  a simple configuration looks like:
  http {
  	upstream mystates {
  		server host1:port;
  		server host2:port;
  	}
  	
  	server {
  		listen 80;
  		server_name localhost;
  		
  		location /statems/ {
  			# the ending slash is important,
  			# without the ending /, it will forward /statems/.... as part of url to the real server.
  			# with the ending /, it will strip the /statems, just send the rest to the real server.
  			# for example, use put http://nginxserver/statems/v1/.....
  			# with the ending /, the request will be http://host1:port/v1/....
  			# otherwise, it will be http://host1:port/statems/v1/.....
  			proxy_pass http://mystates/; 
  		}
  }

Swagger editor from an existing project:
E:\aws-related\swagger-project\hello-world>swagger project edit

# curl to the Singluarity 
 curl -i -X POST -H "Content-Type: application/json" -d @docker_hello_world.json http://localhost:7099/singularity/api/deploys 

# curl to my nodejs web server, the elment should be message="deploy object" 
 curl -i -X POST -H "Content-Type: application/json" -d @nodejs_post.json http://localhost:8787/submit 

# curl with proxy, if the password contains @, put "" around it.
E:\aws-related\mesos-frame-work-jobs>curl --proxy http://np1prxy801.corp.halliburton.com:80 --proxy-user userName:password -X POST -H "Content-Type: application/json" -d @nodejs_post.json http://52.91.164.216:8787/submit

# git with proxy
  git config --global http://np1prxy801.corp.halliburton.com:80
centos instllation:
always run this:
   sudo yum install epel-release

1. x2go server
	sudo yum -y install x2goserver x2goserver-xsession
	
2. node.js:
	sudo yum -y nodejs npm
	
	
3. swagger
   npm install swagger
   
4. git
   sudo yum -y install git
 
